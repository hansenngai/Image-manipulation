#BlueJ class context
comment0.target=Processor
comment0.text=\n\ Starter\ code\ for\ Processor\ -\ the\ class\ that\ processes\ images.\n\ <p>\n\ This\ class\ manipulated\ Java\ BufferedImages,\ which\ are\ effectively\ 2d\ arrays\n\ of\ pixels.\ Each\ pixel\ is\ a\ single\ integer\ packed\ with\ 4\ values\ inside\ it.\n\ <p>\n\ I\ have\ included\ two\ useful\ methods\ for\ dealing\ with\ bit-shift\ operators\ so\n\ you\ don't\ have\ to.\ These\ methods\ are\ unpackPixel()\ and\ packagePixel()\ and\ do\n\ exactly\ what\ they\ say\ -\ extract\ red,\ green,\ blue\ and\ alpha\ values\ out\ of\ an\n\ int,\ and\ put\ the\ same\ four\ integers\ back\ into\ a\ special\ packed\ integer.\ \n\ <p>\n\ Image\ maniupulation\ project\ with\ multiple\ features.\n\ \n\ @author\ Hansen\ Ngai,\ Jordan\ Cohen\ \n\ @version\ April\ 2015\n
comment1.params=bi
comment1.target=void\ blur(java.awt.image.BufferedImage)
comment1.text=\n\ An\ effect\ that\ can\ be\ used\ to\ blur\ an\ image.\ Found\ on\ internet.\n\ \n\ @author\ http\://www.jhlabs.com/ip/blurring.html\n\ \n\ @param\ bi\ The\ BufferedImage\ (passed\ by\ reference)\ to\ change.\n
comment10.params=
comment10.target=java.awt.image.BufferedImage\ undo()
comment11.params=image
comment11.target=void\ savePNG(java.awt.image.BufferedImage)
comment11.text=\n\ Saves\ as\ a\ PNG\ file.\n\ \n
comment12.params=bi
comment12.target=java.awt.image.BufferedImage\ rotate(java.awt.image.BufferedImage)
comment12.text=\n\ Rotates\ the\ image\ by\ swapping\ x\ and\ y.\n\ \n\ Utilizes\ pixel\ packaging\ and\ unpackaging\ methods.\ \n\ \ \ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change.\n\ @return\ \ BufferedImage\ Returns\ the\ BufferedImage\ of\ rotated\ form\n
comment13.params=rgbaValue
comment13.target=int[]\ unpackPixel(int)
comment13.text=\n\ Takes\ in\ an\ rgb\ value\ -\ the\ kind\ that\ is\ returned\ from\ BufferedImage's\n\ getRGB()\ method\ -\ and\ returns\ 4\ integers\ for\ easy\ manipulation.\n\ \n\ By\ Jordan\ Cohen\n\ Version\ 0.2\n\ \n\ @param\ rgbaValue\ The\ value\ of\ a\ single\ pixel\ as\ an\ integer,\ representing<br>\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 8\ bits\ for\ red,\ green\ and\ blue\ and\ 8\ bits\ for\ alpha\:<br>\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>alpha\ \ \ red\ \ \ \ \ green\ \ \ blue</pre>\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>00000000000000000000000000000000</pre>\n\ @return\ int[4]\ \ \ Array\ containing\ 4\ shorter\ ints<br>\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>0\ \ \ \ \ \ \ 1\ \ \ \ \ \ \ 2\ \ \ \ \ \ \ 3</pre>\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>alpha\ \ \ red\ \ \ \ \ green\ \ \ blue</pre>\n
comment14.params=r\ g\ b\ a
comment14.target=int\ packagePixel(int,\ int,\ int,\ int)
comment14.text=\n\ Takes\ in\ a\ red,\ green,\ blue\ and\ alpha\ integer\ and\ uses\ bit-shifting\n\ to\ package\ all\ of\ the\ data\ into\ a\ single\ integer.\n\ \n\ @param\ \ \ int\ red\ value\ (0-255)\n\ @param\ \ \ int\ green\ value\ (0-255)\n\ @param\ \ \ int\ blue\ value\ (0-255)\n\ @param\ \ \ int\ alpha\ value\ (0-255)\n\ \n\ @return\ int\ \ Integer\ representing\ 32\ bit\ integer\ pixel\ ready\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ BufferedImage\n
comment15.params=bi
comment15.target=java.awt.image.BufferedImage\ deepCopy(java.awt.image.BufferedImage)
comment15.text=\n\ Example\ colour\ altering\ method\ by\ Mr.\ Cohen.\ This\ method\ will\n\ increase\ the\ blue\ value\ while\ reducing\ the\ red\ and\ green\ values.\n\ \n\ Demonstrates\ use\ of\ packagePixel()\ and\ unpackPixel()\ methods.\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change.\n\ @return\ \ BufferedImage\ Returns\ the\ BufferedImage\ that\ is\ used\ for\ undoing.\n
comment16.params=bi
comment16.target=void\ addImage(java.awt.image.BufferedImage)
comment16.text=\n\ Adds\ image\ to\ list\ for\ undo\ purposes.\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ add.\n\ \n
comment17.params=newBi
comment17.target=greenfoot.GreenfootImage\ createGreenfootImageFromBI(java.awt.image.BufferedImage)
comment17.text=\n\ Takes\ in\ a\ BufferedImage\ and\ returns\ a\ GreenfootImage.\ By\ Mr.\ Cohen.\n\ \n\ @param\ newBi\ The\ BufferedImage\ to\ convert.\n\ \n\ @return\ GreenfootImage\ \ \ A\ GreenfootImage\ built\ from\ the\ BufferedImage\ provided.\n
comment2.params=bi
comment2.target=void\ blueify(java.awt.image.BufferedImage)
comment2.text=\n\ Example\ colour\ altering\ method\ by\ Mr.\ Cohen.\ This\ method\ will\n\ increase\ the\ blue\ value\ while\ reducing\ the\ red\ and\ green\ values.\n\ \n\ Demonstrates\ use\ of\ packagePixel()\ and\ unpackPixel()\ methods.\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change.\n
comment3.params=bi
comment3.target=void\ negative(java.awt.image.BufferedImage)
comment3.text=\n\ Changes\ to\ image\ to\ have\ negative\ color.\ Removes\ original\ r,g,b\ value\ from\ 255.\ \n\ \n\ Demonstrates\ use\ of\ packagePixel()\ and\ unpackPixel()\ methods.\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change.\n
comment4.params=bi
comment4.target=void\ flipHorizontal(java.awt.image.BufferedImage)
comment4.text=\n\ Flips\ the\ image\ horizontally.\n\nDemonstrates\ use\ of\ packagePixel()\ and\ unpackPixel()\ methods.\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change.\n\ \n\ \n
comment5.params=bi
comment5.target=void\ flipVertical(java.awt.image.BufferedImage)
comment5.text=\n\ Flips\ the\ image\ vertically.\n\ \n\ Demonstrates\ use\ of\ packagePixel()\ and\ unpackPixel()\ methods.\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change.\n\ \n
comment6.params=bi
comment6.target=void\ greyScale(java.awt.image.BufferedImage)
comment6.text=\n\ Makes\ the\ image\ black\ &\ white\ (greyscale).\ \n\ \n\ Demonstrates\ use\ of\ packagePixel()\ and\ unpackPixel()\ methods.\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change.\n\ \n
comment7.params=bi
comment7.target=void\ warm(java.awt.image.BufferedImage)
comment7.text=\n\ "Warms"\ the\ picture.\ (Increases\ red\ value).\n\ \n\ Demonstrates\ use\ of\ packagePixel()\ and\ unpackPixel()\ methods.\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change.\n\ \n
comment8.params=bi
comment8.target=void\ cool(java.awt.image.BufferedImage)
comment8.text=\n\ "Cools"\ the\ image.\ (Increases\ blue\ value)\n\ \n\ Demonstrates\ use\ of\ packagePixel()\ and\ unpackPixel()\ methods.\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change.\n\ \n
comment9.params=bi
comment9.target=void\ greenify(java.awt.image.BufferedImage)
comment9.text=\n\ Turns\ the\ image\ greener.\n\ \n\ Demonstrates\ use\ of\ packagePixel()\ and\ unpackPixel()\ methods.\n\ \n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change.\n\ \n
numComments=18
